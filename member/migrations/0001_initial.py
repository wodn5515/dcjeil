# Generated by Django 3.1.2 on 2020-10-12 20:56

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('menu', '0002_submenu_is_allowed_to_all'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BoardPermissionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True, verbose_name='그룹명')),
                ('permissions', models.ManyToManyField(blank=True, limit_choices_to={'m_type__contains': 'list'}, to='menu.Submenu', verbose_name='게시판')),
            ],
            options={
                'verbose_name': '게시판 권한',
                'verbose_name_plural': '게시판 권한',
            },
        ),
        migrations.CreateModel(
            name='AdminPermissionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True, verbose_name='그룹명')),
                ('permissions', models.ManyToManyField(blank=True, to='auth.Permission', verbose_name='권한')),
            ],
            options={
                'verbose_name': '관리자페이지 권한',
                'verbose_name_plural': '관리자페이지 권한',
            },
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('name', models.CharField(default='', max_length=5, verbose_name='이름')),
                ('is_active', models.BooleanField(default=False, verbose_name='승인')),
                ('is_staff', models.BooleanField(default=False, help_text='관리자페이지 접속권한', verbose_name='스태프')),
                ('is_superuser', models.BooleanField(default=False, help_text='최고등급의 관리자권한', verbose_name='관리자')),
                ('is_social', models.BooleanField(default=False, verbose_name='소셜로그인')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='가입날짜')),
                ('uid', models.CharField(error_messages={'unique': '이미 가입된 아이디 입니다.'}, max_length=50, unique=True, verbose_name='ID')),
                ('email', models.EmailField(error_messages={'unique': '이미 가입된 이메일 입니다.'}, help_text='회원정보를 찾을 때 필요합니다', max_length=254, null=True, unique=True, verbose_name='이메일')),
                ('adminpermissiongroups', models.ManyToManyField(blank=True, to='member.AdminPermissionGroup', verbose_name='관리자페이지 권한')),
                ('boardpermissiongroups', models.ManyToManyField(blank=True, to='member.BoardPermissionGroup', verbose_name='게시판 권한')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '회원',
                'verbose_name_plural': '회원',
                'ordering': ('-date_joined',),
            },
        ),
    ]
